# cf. https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
# L'URL de la source de données
spring.datasource.url=jdbc:h2:mem:testdb

# Autres exemples de configuration de la source de données
#spring.datasource.url=jdbc:derby:memory:comptoirs;create=true
#spring.datasource.username=app
#spring.datasource.password=app
#spring.datasource.driver-class-name=org.apache.derby.jdbc.ClientDriver

# Comment hibernate doit recréér le schéma de la BD
# Hibernate ddl auto (create, create-drop, update, none): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

# Optionnel : générer les instructions SQL pour la création du schéma relationnel (DDL)
# Par défaut, le code SQL des create table sera affiché dans la console
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Encodage des scripts sql d'initialisation de la BD : data.sql, schema.sql
# cf. https://code.chamo.de/2017/04/21/spring-boot-jpa-encoding-data-sql/
spring.datasource.sqlScriptEncoding=UTF-8

# Affichage par défaut des erreurs du serveur
server.error.whitelabel.enabled=true

# La console H2 est activée automatiquement si on utilise Spring Boot Dev Tools 
#spring.h2.console.enabled=true
# L'URL par défaut de la console H2, customisable
#spring.h2.console.path=/h2-console
#
# Configuration de la génération de JSON
spring.data.rest.defaultMediaType=application/json
# Pour générer du joli JSON
spring.jackson.serialization.indent-output=true
# L'API REST est exposée à l'url http://localhost:8080/api
spring.data.rest.base-path=api

# Configuration des logs
logging.level.web=DEBUG
# Montrer le détail des paramètres HTTP transmis dans les logs
spring.mvc.log-request-details=true

# cf. https://www.baeldung.com/sql-logging-spring-boot
# Configuration des logs SQL JPA
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%clr(%-5p)  %cyan(%logger{15}) - %msg %n